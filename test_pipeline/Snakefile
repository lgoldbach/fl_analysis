# General Snakefile for simulating kimura adaptive walks

configfile: "./config.yaml"
scripts = config["scripts"]
csv_input = config["csv_input"]


rule all:
    input:
        "adaptive_walks.pickle"

rule parse_genotypes:
    input:
        csv_input
    output:
        genotypes="genotypes.npy",
        genotypes_num="genotypes.num.npy"
    params:
        csv_delimiter=config["csv_delimiter"]
    script:
        scripts + "extract_genotypes.py"

rule parse_phenotypes:
    input:
        csv_input
    output:
        phenotype="phenotypes.npy"
    params:
        csv_delimiter=config["csv_delimiter"],
        csv_pheno_id="score"
    script:
        scripts + "extract_phenotypes.py"


rule compute_hamming_distances:
    input:
        "genotypes.num.npy"
    output:
        "hamming_distances.npy"
    script:
        scripts + "compute_hamming_distances.py"
    

rule build_transition_matrix:
    input: 
        hamming_dist="hamming_distances.npy",
        phenotypes="phenotypes.npy",
        genotypes="genotypes.npy"
    output:
        "transition_matrix.npz"
    script:
        scripts + "build_transition_matrix_uniform.py"

rule pick_starting_genotypes:
    input:
        phenotypes="phenotypes.npy",
    output:
        "starting_genotypes.npy"
    params:
        starting_set_size=config["adaptive_walk_params"]["starting_set_size"],
        rseed=config["random_seed"]
    script:
        scripts + "pick_genotypes.py"

rule run_adaptive_walks:
    input:
        transition_matrix="transition_matrix.npz",
        starting_genotypes="starting_genotypes.npy"
    output:
        "adaptive_walks.pickle"
    params:
        sample_size=config["adaptive_walk_params"]["sample_size"],
        rseed=config["random_seed"]
    script:
        scripts + "run_adaptive_walks.py"
